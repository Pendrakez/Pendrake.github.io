1.
 
  HashMap 컬렉션 클래스를 사용해서 
    key   - TeamVO (name, totalNumber , leader ) 
                   팀명   팀원수        팀리더
                   
    value - ArrayList<MemberVO>
                      팀원들
                      
    로 저장해서 출력하는 코딩을 하세요. 
    ( 조건 1: key 값으로 TeamVO 클래스 선언 )
    ( 조건 2: value 값으로 어제 선언한 MemberVO 클래스 사용 )
    ( 조건 3: 출력 메서드  void dispTeamMember(HashMap<TeamVO, ArrayList<MemberVO>> teamMap)  선언 )
      
import java.io.BufferedReader;
import java.io.FileReader;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Set;
import java.util.jar.Attributes.Name;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;
import lombok.ToString;

/*
 * HashMap 컬렉션 클래스를 사용해서 
    key   - TeamVO (name, totalNumber , leader ) 
                   팀명   팀원수        팀리더

    value - ArrayList<MemberVO>
                      팀원들

    로 저장해서 출력하는 코딩을 하세요. 
    ( 조건 1: key 값으로 TeamVO 클래스 선언 )
    ( 조건 2: value 값으로 어제 선언한 MemberVO 클래스 사용 )
    ( 조건 3: 출력 메서드  void dispTeamMember(HashMap<TeamVO, ArrayList<MemberVO>> teamMap)  선언 )
 */

public class Ex01 {

	public static void main(String[] args) {
		String fileName = ".\\src\\days24\\Java 팀 구성.txt";
		String line = null;
		String teamName = null;
		ArrayList <MemberVO> teamList = null;
		ArrayList <TeamVO> teaminfo = null;

		HashMap<TeamVO, ArrayList<MemberVO>> teamMap = new LinkedHashMap<>();

		try(FileReader fr = new FileReader(fileName);
				BufferedReader br = new BufferedReader(fr)) {
			while ( (line = br.readLine()) != null && !line.equals("") ) {
				teamName = line; // 조 이름
				line = br.readLine(); // 조원 리스트
				String [] tNames = line.split(teamName);
				teamList = new ArrayList<>();

				for (int i = 0; i < tNames.length; i++) {
					String name = tNames[i]; // 팀원 이름 가져오기
					if (name.contains("팀장")) { // 팀장이라는 이름이 들어가 있다면
						name.replace("(팀장)", ""); // (팀장)이라는거 replace 해줘라
						teamList.add(new MemberVO(name, "팀장")); // teamList에 추가
					} else { // 팀장이 아닌 나머지 팀원
						teamList.add(new MemberVO(name, "팀원");
					} // if esle
				}// for
				teamMap.put(teamName, teamList); // teamMap에 teamName과 teamList entry를 가져오는 작업
			} // while

			dispTeamMember(teamMap);
		} catch (Exception e) {
			e.printStackTrace();
		}



	} // main

	private static void dispTeamMember(HashMap<TeamVO, ArrayList<MemberVO>> teamMap) {
		// 시간 부족으로 작성 못했습니다.
	}
} // class


@Getter
@Setter
@AllArgsConstructor
@NoArgsConstructor
@Builder
@ToString
public class MemberVO {

	private String name;
	private String role; // 역할
}

public class TeamVO {
	private String name;
	private int totalNumber;
	private String leader;
}